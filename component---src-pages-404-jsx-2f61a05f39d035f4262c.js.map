{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/actions/imageActions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.jsx","webpack:///./src/reducers/imageReducer.js","webpack:///./src/reducers/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","IMAGE_ORIGIN","IMAGE_SECRET","IMAGE_ORIGIN_ADDED","IMAGE_SECRET_ADDED","IMAGE_EMBED_END","IMAGE_EXTRACT_START","IMAGE_EXTRACT_END","IMAGE_EXTRACT_STATUS_UPDATE","addOriginImage","addSecretImage","embedImage","extractImage","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","config","require","imageEncoded","type","updateExtractStatus","status","dispatch","getState","_getState$image","image","imageOrigin","imageSecret","axios","url","apiUrl","method","data","query","then","result","embeddedImage","JSON","parse","embed","msg","console","log","endEmbedImage","markedImage","startExtractImage","onUploadProgress","event","loaded","total","Math","round","onDownloadProgress","extractedImage","extract","endExtractImage","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object","InitialState","Record","extractStatus","rootReducer","combineReducers","state","action","imageActions","set","createContext","func","Header","_ref$classes","classes","appBar","menu","left","right","logo","react_default","AppBar","className","position","Toolbar","Typography","variant","color","Button","size","onClick","navigate","window","open","withStyles","root","margin","padding","paddingTop","top","backgroundColor","display","justifyContent","height","marginRight","marginLeft","Layout","children","_856328897","store","createStore","reducers","applyMiddleware","thunk","es","header","siteTitle","style","Date","getFullYear","href","node"],"mappings":"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","file":"component---src-pages-404-jsx-2f61a05f39d035f4262c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import axios from 'axios';\n\nconst { config } = require('../../package.json');\n\nexport const IMAGE_ORIGIN = 'IMAGE_ORIGIN';\nexport const IMAGE_SECRET = 'IMAGE_SECRET';\nexport const IMAGE_ORIGIN_ADDED = 'IMAGE_ORIGIN_ADDED';\nexport const IMAGE_SECRET_ADDED = 'IMAGE_SECRET_ADDED';\nexport const IMAGE_EMBED_START = 'IMAGE_EMBED_START';\nexport const IMAGE_EMBED_END = 'IMAGE_EMBED_END';\nexport const IMAGE_EXTRACT_START = 'IMAGE_EXTRACT_START';\nexport const IMAGE_EXTRACT_END = 'IMAGE_EXTRACT_END';\nexport const IMAGE_EXTRACT_STATUS_UPDATE = 'IMAGE_EXTRACT_STATUS_UPDATE';\n\nexport const addOriginImage = imageEncoded => ({\n  type: IMAGE_ORIGIN_ADDED,\n  imageEncoded,\n});\n\nexport const addSecretImage = imageEncoded => ({\n  type: IMAGE_SECRET_ADDED,\n  imageEncoded,\n});\n\nexport const endEmbedImage = embeddedImage => ({\n  type: IMAGE_EMBED_END,\n  embeddedImage,\n});\n\nexport const startExtractImage = markedImage => ({\n  type: IMAGE_EXTRACT_START,\n  markedImage,\n});\n\nexport const endExtractImage = extractedImage => ({\n  type: IMAGE_EXTRACT_END,\n  extractedImage,\n});\n\nexport const updateExtractStatus = status => ({\n  type: IMAGE_EXTRACT_STATUS_UPDATE,\n  status,\n});\n\nexport const embedImage = () => (dispatch, getState) => {\n  const { image: { imageOrigin, imageSecret } } = getState();\n  axios({\n    url: config.apiUrl,\n    method: 'post',\n    data: {\n      query: `\n        {\n          embed(\n            originImage: \"${imageOrigin}\",\n            secretImage: \"${imageSecret}\"\n          )\n        }\n      `,\n    },\n  }).then(result => {\n    const { embeddedImage } = JSON.parse(result.data.data.embed).msg;\n    console.log(embeddedImage);\n    dispatch(endEmbedImage(embeddedImage));\n  });\n};\n\nexport const extractImage = markedImage => (dispatch, getState) => {\n  dispatch(startExtractImage(markedImage));\n  axios({\n    url: config.apiUrl,\n    method: 'post',\n    data: {\n      query: `\n        {\n          extract(\n            markedImage: \"${markedImage}\",\n          )\n        }\n      `,\n    },\n    onUploadProgress: event => {\n      if (event.loaded === event.total) {\n        dispatch(updateExtractStatus('正在解析'));\n      } else {\n        dispatch(updateExtractStatus(`正在上传\n          ${Math.round(event.loaded / event.total * 100)}%\n        `));\n      }\n    },\n    onDownloadProgress: event => {\n      if (event.loaded === event.total) {\n        dispatch(updateExtractStatus(''));\n      } else {\n        dispatch(updateExtractStatus(`正在下载\n          ${Math.round(event.loaded / event.total * 100)}%\n        `));\n      }\n    },\n  }).then(result => {\n    const { extractedImage } = JSON.parse(result.data.data.extract).msg;\n    dispatch(endExtractImage(extractedImage));\n  });\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Record } from 'immutable';\nimport * as imageActions from '../actions/imageActions';\n\nconst InitialState = new Record({\n  imageOrigin: '',\n  imageSecret: '',\n  embeddedImage: '',\n  extractedImage: '',\n  extractStatus: '',\n});\n\nexport default function reducer(state = new InitialState(), action) {\n  switch (action.type) {\n    case imageActions.IMAGE_ORIGIN_ADDED: {\n      return state.set('imageOrigin', action.imageEncoded);\n    }\n\n    case imageActions.IMAGE_SECRET_ADDED: {\n      return state.set('imageSecret', action.imageEncoded);\n    }\n\n    case imageActions.IMAGE_EMBED_END: {\n      return state.set('embeddedImage', action.embeddedImage);\n    }\n\n    case imageActions.IMAGE_EXTRACT_START: {\n      return state.set('extractedImage', action.markedImage);\n    }\n\n    case imageActions.IMAGE_EXTRACT_END: {\n      return state.set('extractedImage', action.extractedImage);\n    }\n\n    case imageActions.IMAGE_EXTRACT_STATUS_UPDATE: {\n      return state.set('extractStatus', action.status);\n    }\n\n    default:\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\n\nimport image from './imageReducer';\n\nconst rootReducer = combineReducers({\n  image,\n});\n\nexport default rootReducer;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigate } from 'gatsby';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    margin: '0 auto',\n    padding: '0px 48px 48px',\n    paddingTop: 24,\n  },\n  appBar: {\n    position: 'fixed',\n    top: 0,\n    backgroundColor: '#20232a',\n  },\n  menu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: 56,\n  },\n  left: {\n    marginRight: 'auto',\n  },\n  right: {\n    marginLeft: 'auto',\n  },\n};\n\nconst Header = ({\n  classes: {\n    appBar,\n    menu,\n    left,\n    right,\n    logo,\n  },\n}) => (\n  <AppBar className={appBar} position=\"static\">\n    <Toolbar className={menu}>\n      <div className={left}>\n        <Typography variant=\"h6\" color=\"inherit\" className={logo}>\n          INVIMARC\n        </Typography>\n      </div>\n      <div className={right}>\n        <Button color=\"inherit\" size=\"large\" onClick={() => { navigate('/'); }}>首页</Button>\n        <Button color=\"inherit\" size=\"large\" onClick={() => { window.open('http://invimarc.com', '_blank'); }}>关于我们</Button>\n      </div>\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  classes: PropTypes.shape({\n    appBar: PropTypes.shape({}).isRequired,\n    menu: PropTypes.shape({}).isRequired,\n    left: PropTypes.shape({}).isRequired,\n    right: PropTypes.shape({}).isRequired,\n    logo: PropTypes.shape({}).isRequired,\n  }).isRequired,\n};\n\nHeader.defaultProps = {\n};\n\nexport default withStyles(styles)(Header);\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport './layout.css';\n\nimport { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\nimport Header from './header';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const store = createStore(reducers, applyMiddleware(thunk));\n\n  return (\n    <Provider store={store}>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: '0 auto',\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {' '}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </Provider>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}