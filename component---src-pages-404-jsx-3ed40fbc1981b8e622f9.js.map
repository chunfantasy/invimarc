{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object","createContext","func","Header","classes","react_default","AppBar","className","appBar","position","Toolbar","menu","left","Typography","variant","color","logo","right","Button","size","onClick","navigate","window","open","withStyles","root","margin","padding","paddingTop","top","backgroundColor","display","justifyContent","minHeight","marginRight","marginLeft","Layout","children","_856328897","Fragment","header","siteTitle","style","maxWidth","Date","getFullYear","href","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,2FCTJ,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,sLCKzCK,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEC,IAAMX,cAAcY,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,MASXR,EAAiBS,UAAY,CAC3BP,SAAUQ,IAAUC,MAAM,CACxBC,SAAUF,IAAUG,OAAOC,aAC1BA,YAGUd,6GCVf,SAASe,EAATd,GAAiD,IAAlCe,EAAkCf,EAAlCe,YAAaC,EAAqBhB,EAArBgB,KAAMC,EAAejB,EAAfiB,KAAMxB,EAASO,EAATP,MAC9ByB,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAD,CACEkC,eAAgB,CACdT,QAEFvB,MAAOA,EACPiC,cAAa,QAAUR,EAAKI,aAAa7B,MACzCwB,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnC,GAEX,CACEoC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASnC,GAEX,CACEkC,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbD,EAAIN,UAAY,CACdO,YAAaN,IAAUG,OACvBI,KAAMP,IAAUG,OAChBK,KAAMR,IAAUwB,QAAQxB,IAAUyB,QAClCzC,MAAOgB,IAAUG,OAAOC,YAGXC,4ZC1EYX,IAAMgC,cAAc,IAuDvC1B,IAAUyB,OACTzB,IAAUG,OAAOC,WAChBJ,IAAU2B,KACR3B,IAAU2B,kBCtChBC,EAAS,SAAArC,GAAA,IAAGsC,EAAHtC,EAAGsC,QAAH,OACbC,EAAAhD,EAAAC,cAACgD,EAAA,EAAD,CAAQC,UAAWH,EAAQI,OAAQC,SAAS,UAC1CJ,EAAAhD,EAAAC,cAACoD,EAAA,EAAD,CAASH,UAAWH,EAAQO,MAC1BN,EAAAhD,EAAAC,cAAA,OAAKiD,UAAWH,EAAQQ,MACtBP,EAAAhD,EAAAC,cAACuD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUR,UAAWH,EAAQY,MAA5D,gBAIFX,EAAAhD,EAAAC,cAAA,OAAKiD,UAAWH,EAAQa,OACtBZ,EAAAhD,EAAAC,cAAC4D,EAAA,EAAD,CAAQH,MAAM,UAAUI,KAAK,QAAQC,QAAS,WAAQC,mBAAS,OAA/D,MACAhB,EAAAhD,EAAAC,cAAC4D,EAAA,EAAD,CAAQH,MAAM,UAAUI,KAAK,QAAQC,QAAS,WAAQC,mBAAS,gBAA/D,QACAhB,EAAAhD,EAAAC,cAAC4D,EAAA,EAAD,CAAQH,MAAM,UAAUI,KAAK,QAAQC,QAAS,WAAQC,mBAAS,iBAA/D,QACAhB,EAAAhD,EAAAC,cAAC4D,EAAA,EAAD,CAAQH,MAAM,UAAUI,KAAK,QAAQC,QAAS,WAAQE,OAAOC,KAAK,oDAAqD,YAAvH,YAMRpB,EAAO7B,UAAY,CACjB8B,QAAS7B,IAAUC,MAAM,IAAIG,YAG/BwB,EAAOL,aAAe,GAGP0B,kBAjDA,CACbC,KAAM,CACJC,OAAQ,SACRC,QAAS,gBACTC,WAAY,IAEdpB,OAAQ,CACNC,SAAU,QACVoB,IAAK,EACLC,gBAAiB,WAEnBnB,KAAM,CACJoB,QAAS,OACTC,eAAgB,gBAChBC,UAAW,IAEbrB,KAAM,CACJsB,YAAa,QAEfjB,MAAO,CACLkB,WAAY,SA6BDX,CAAmBrB,GC5C5BiC,UAAS,SAAAtE,GAAkB,IAAfuE,EAAevE,EAAfuE,SACVnD,EAAOoD,EAAApD,KAUb,OACEmB,EAAAhD,EAAAC,cAAA+C,EAAAhD,EAAAkF,SAAA,KACElC,EAAAhD,EAAAC,cAACkF,EAAD,CAAQC,UAAWvD,EAAKF,KAAKI,aAAa7B,QAC1C8C,EAAAhD,EAAAC,cAAA,OACEoF,MAAO,CACLhB,OAAM,SACNiB,SAAU,IACVhB,QAAO,wBACPC,WAAY,IAGdvB,EAAAhD,EAAAC,cAAA,YAAO+E,GACPhC,EAAAhD,EAAAC,cAAA,oBACK,IAAIsF,MAAOC,cADhB,mBAGExC,EAAAhD,EAAAC,cAAA,KAAGwF,KAAK,4BAAR,eAOVV,EAAO9D,UAAY,CACjB+D,SAAU9D,IAAUwE,KAAKpE,YAGZyD","file":"component---src-pages-404-jsx-3ed40fbc1981b8e622f9.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigate } from 'gatsby';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    margin: '0 auto',\n    padding: '0px 48px 48px',\n    paddingTop: 24,\n  },\n  appBar: {\n    position: 'fixed',\n    top: 0,\n    backgroundColor: '#20232a',\n  },\n  menu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    minHeight: 56,\n  },\n  left: {\n    marginRight: 'auto',\n  },\n  right: {\n    marginLeft: 'auto',\n  },\n};\n\nconst Header = ({ classes }) => (\n  <AppBar className={classes.appBar} position=\"static\">\n    <Toolbar className={classes.menu}>\n      <div className={classes.left}>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.logo}>\n          FLYACADEMIA\n        </Typography>\n      </div>\n      <div className={classes.right}>\n        <Button color=\"inherit\" size=\"large\" onClick={() => { navigate('/'); }}>首页</Button>\n        <Button color=\"inherit\" size=\"large\" onClick={() => { navigate('/#services'); }}>咨询服务</Button>\n        <Button color=\"inherit\" size=\"large\" onClick={() => { navigate('/#downloads'); }}>文档下载</Button>\n        <Button color=\"inherit\" size=\"large\" onClick={() => { window.open('https://mp.weixin.qq.com/s/9Rhrvkp_6A_KefyPQe8HZw', '_blank'); }}>关于我们</Button>\n      </div>\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n};\n\nHeader.defaultProps = {\n};\n\nexport default withStyles(styles)(Header);\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}